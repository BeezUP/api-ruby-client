=begin
#Public - Channels

#This api allows you to get access to the channels. The main use case is our public commercial web site.

OpenAPI spec version: 2.0
Contact: support@beezup.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

# Common files
require 'swagger_client/api_client'
require 'swagger_client/api_error'
require 'swagger_client/version'
require 'swagger_client/configuration'

# Models
require 'swagger_client/models/beez_up_common_doc_url'
require 'swagger_client/models/beez_up_common_error_response_message'
require 'swagger_client/models/beez_up_common_error_summary'
require 'swagger_client/models/beez_up_common_exception_detail'
require 'swagger_client/models/beez_up_common_href'
require 'swagger_client/models/beez_up_common_http_method'
require 'swagger_client/models/beez_up_common_info_summaries'
require 'swagger_client/models/beez_up_common_info_summary'
require 'swagger_client/models/beez_up_common_lov_link2'
require 'swagger_client/models/beez_up_common_link3'
require 'swagger_client/models/beez_up_common_link_parameter3'
require 'swagger_client/models/beez_up_common_operation_id'
require 'swagger_client/models/beez_up_common_success_summary'
require 'swagger_client/models/beez_up_common_user_error_message'
require 'swagger_client/models/beez_up_common_user_error_message_arguments'
require 'swagger_client/models/beez_up_common_warning_summary'
require 'swagger_client/models/channel_info'
require 'swagger_client/models/channel_info_list'
require 'swagger_client/models/channel_info_list_links'
require 'swagger_client/models/links_get_channels_index_link'
require 'swagger_client/models/links_get_channels_link'
require 'swagger_client/models/links_get_public_list_of_values_link'
require 'swagger_client/models/public_channel_index'
require 'swagger_client/models/public_channel_index_links'

# APIs
require 'swagger_client/api/public_channels_api'

module SwaggerClient
  class << self
    # Customize default settings for the SDK using block.
    #   SwaggerClient.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
