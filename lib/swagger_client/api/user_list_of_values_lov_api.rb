=begin
#BeezUP API

#This API will allow you to create your account and to get your tokens. \\ If you lost your password, you have an operation to get it back. 

OpenAPI spec version: 2.0
Contact: support@beezup.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

require "uri"

module SwaggerClient
  class UserListOfValuesLOVApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Get the list of values related to this list name
    # 
    # @param list_name The list of value name your want to get
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :accept_language Indicates that the client accepts the following languages.
    # @option opts [String] :if_none_match ETag value to identify the last known version of requested resource.\\ To avoid useless exchange, we recommend you to indicate the ETag you previously got from this operation.\\ If the ETag value does not match the response will be 200 to give you a new content, otherwise the response will be: 304 Not Modified, without any content.\\ For more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3 
    # @return [UserListOfValuesResponse]
    def get_user_list_of_values(list_name, opts = {})
      data, _status_code, _headers = get_user_list_of_values_with_http_info(list_name, opts)
      return data
    end

    # Get the list of values related to this list name
    # 
    # @param list_name The list of value name your want to get
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :accept_language Indicates that the client accepts the following languages.
    # @option opts [String] :if_none_match ETag value to identify the last known version of requested resource.\\ To avoid useless exchange, we recommend you to indicate the ETag you previously got from this operation.\\ If the ETag value does not match the response will be 200 to give you a new content, otherwise the response will be: 304 Not Modified, without any content.\\ For more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3 
    # @return [Array<(UserListOfValuesResponse, Fixnum, Hash)>] UserListOfValuesResponse data, response status code and response headers
    def get_user_list_of_values_with_http_info(list_name, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: UserListOfValuesLOVApi.get_user_list_of_values ..."
      end
      # verify the required parameter 'list_name' is set
      fail ArgumentError, "Missing the required parameter 'list_name' when calling UserListOfValuesLOVApi.get_user_list_of_values" if list_name.nil?
      # resource path
      local_var_path = "/user/lov/{listName}".sub('{format}','json').sub('{' + 'listName' + '}', list_name.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])
      header_params[:'Accept-Language'] = @api_client.build_collection_param(opts[:'accept_language'], :csv) if !opts[:'accept_language'].nil?
      header_params[:'If-None-Match'] = opts[:'if_none_match'] if !opts[:'if_none_match'].nil?

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['api_key']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'UserListOfValuesResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: UserListOfValuesLOVApi#get_user_list_of_values\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get all list names
    # 
    # @param [Hash] opts the optional parameters
    # @return [UserLovIndex]
    def get_user_lov_index(opts = {})
      data, _status_code, _headers = get_user_lov_index_with_http_info(opts)
      return data
    end

    # Get all list names
    # 
    # @param [Hash] opts the optional parameters
    # @return [Array<(UserLovIndex, Fixnum, Hash)>] UserLovIndex data, response status code and response headers
    def get_user_lov_index_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: UserListOfValuesLOVApi.get_user_lov_index ..."
      end
      # resource path
      local_var_path = "/user/lov/".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['api_key']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'UserLovIndex')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: UserListOfValuesLOVApi#get_user_lov_index\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
