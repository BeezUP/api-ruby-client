=begin
#BeezUP API

#This API will allow you to create your account and to get your tokens. \\ If you lost your password, you have an operation to get it back. 

OpenAPI spec version: 2.0
Contact: support@beezup.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::MarketplacesOrdersOrderApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'MarketplacesOrdersOrderApi' do
  before do
    # run before each test
    @instance = SwaggerClient::MarketplacesOrdersOrderApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of MarketplacesOrdersOrderApi' do
    it 'should create an instact of MarketplacesOrdersOrderApi' do
      expect(@instance).to be_instance_of(SwaggerClient::MarketplacesOrdersOrderApi)
    end
  end

  # unit tests for change_order
  # Change your marketplace Order Information (accept, ship, etc.)
  # 
  # @param marketplace_technical_code The marketplace technical code
  # @param account_id The account identifier
  # @param beez_up_order_id The BeezUP Order identifier
  # @param change_order_type The Order change type
  # @param user_name Sometimes the user in the e-commerce application is not the same as user associated with the current subscription key. We recommend providing your application&#39;s user login.
  # @param request 
  # @param if_match ETag value to identify the last known version of requested resource.\\ To ensure that you are making a change on the lastest version of the resource.\\ For more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3 
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :test_mode If true, the operation will be not be sent to marketplace. But the validation will be taken in account.
  # @return [nil]
  describe 'change_order test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for clear_merchant_order_info
  # Clear an Order&#39;s merchant information
  # 
  # @param marketplace_technical_code The marketplace technical code
  # @param account_id The account identifier
  # @param beez_up_order_id The BeezUP Order identifier
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'clear_merchant_order_info test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_order
  # Get full Order and Order Item(s) properties
  # 
  # @param marketplace_technical_code The marketplace technical code
  # @param account_id The account identifier
  # @param beez_up_order_id The BeezUP Order identifier
  # @param [Hash] opts the optional parameters
  # @option opts [String] :if_none_match ETag value to identify the last known version of requested resource.\\ To avoid useless exchange, we recommend you to indicate the ETag you previously got from this operation.\\ If the ETag value does not match the response will be 200 to give you a new content, otherwise the response will be: 304 Not Modified, without any content.\\ For more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3 
  # @return [Order]
  describe 'get_order test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_order_history
  # Get an Order&#39;s harvest and change history
  # 
  # @param marketplace_technical_code The marketplace technical code
  # @param account_id The account identifier
  # @param beez_up_order_id The BeezUP Order identifier
  # @param [Hash] opts the optional parameters
  # @return [OrderHistory]
  describe 'get_order_history test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for harvest_order
  # Send harvest request for a single Order
  # 
  # @param marketplace_technical_code The marketplace technical code
  # @param account_id The account identifier
  # @param beez_up_order_id The BeezUP Order identifier
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'harvest_order test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for set_merchant_order_info
  # Set an Order&#39;s merchant information
  # 
  # @param marketplace_technical_code The marketplace technical code
  # @param account_id The account identifier
  # @param beez_up_order_id The BeezUP Order identifier
  # @param request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'set_merchant_order_info test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
