=begin
#BeezUP API

#This is the RESTful API of BeezUP which allows you to manage everything related to BeezUP

OpenAPI spec version: 2.0
Contact: support@beezup.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::V2UserChannelCatalogsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'V2UserChannelCatalogsApi' do
  before do
    # run before each test
    @instance = SwaggerClient::V2UserChannelCatalogsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of V2UserChannelCatalogsApi' do
    it 'should create an instact of V2UserChannelCatalogsApi' do
      expect(@instance).to be_instance_of(SwaggerClient::V2UserChannelCatalogsApi)
    end
  end

  # unit tests for configure_channel_catalog_cost_settings
  # Disable a channel catalog
  # 
  # @param channel_catalog_id The channel catalog identifier
  # @param request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'configure_channel_catalog_cost_settings test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for configure_channel_catalog_exclusion_filters
  # Configure channel catalog exclusion filters
  # 
  # @param channel_catalog_id The channel catalog identifier
  # @param request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'configure_channel_catalog_exclusion_filters test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for configure_channel_catalog_general_settings
  # Disable a channel catalog
  # 
  # @param channel_catalog_id The channel catalog identifier
  # @param request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'configure_channel_catalog_general_settings test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_channel_catalog
  # Create a new channel catalog
  # 
  # @param request 
  # @param [Hash] opts the optional parameters
  # @return [Array<BeezUPCommonLink2>]
  describe 'create_channel_catalog test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_channel_catalog
  # Delete the channel catalog
  # 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_channel_catalog test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_channel_catalog_product_value_override
  # Delete a specific channel catalog product value override
  # 
  # @param channel_catalog_id The channel catalog identifier
  # @param product_id The product identifier
  # @param channel_column_id The channel column identifier
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_channel_catalog_product_value_override test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for disable_channel_catalog
  # Disable a channel catalog
  # 
  # @param channel_catalog_id The channel catalog identifier
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'disable_channel_catalog test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for disable_channel_catalog_product
  # Disable channel catalog product
  # By default a all your catalog products are exposed to the channel. You can disable a product by using this operation. /!\\ In case of massive optimisation we recommand you to use the analytics api 
  # @param channel_catalog_id The channel catalog identifier
  # @param product_id The product identifier
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'disable_channel_catalog_product test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for enable_channel_catalog
  # Enable a channel catalog
  # 
  # @param channel_catalog_id The channel catalog identifier
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'enable_channel_catalog test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_channel_catalog
  # Get the channel catalog information
  # 
  # @param channel_catalog_id The channel catalog identifier
  # @param [Hash] opts the optional parameters
  # @return [ChannelCatalog]
  describe 'get_channel_catalog test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_channel_catalog_categories
  # Get channel catalog categories
  # 
  # @param channel_catalog_id The channel catalog identifier
  # @param [Hash] opts the optional parameters
  # @return [ChannelCatalogCategoryMappings]
  describe 'get_channel_catalog_categories test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_channel_catalog_exclusion_filter_operators
  # Get channel catalog exclusion filter operators
  # 
  # @param [Hash] opts the optional parameters
  # @return [Array<ExclusionFilterOperator>]
  describe 'get_channel_catalog_exclusion_filter_operators test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_channel_catalog_product_info
  # Get channel catalog product information
  # 
  # @param channel_catalog_id The channel catalog identifier
  # @param product_id The product identifier
  # @param [Hash] opts the optional parameters
  # @return [ChannelCatalogProductInfo]
  describe 'get_channel_catalog_product_info test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_channel_catalog_product_info_list
  # Get channel catalog product information list
  # 
  # @param channel_catalog_id The channel catalog identifier
  # @param [Hash] opts the optional parameters
  # @option opts [GetChannelCatalogProductInfoListRequest] :request The channel catalog product list filter
  # @return [ChannelCatalogProductInfoList]
  describe 'get_channel_catalog_product_info_list test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_channel_catalogs
  # List all your current channel catalogs
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :store_id The store identifier
  # @return [ChannelCatalogList]
  describe 'get_channel_catalogs test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for map_channel_catalog_category
  # Map channel catalog category
  # 
  # @param channel_catalog_id The channel catalog identifier
  # @param request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'map_channel_catalog_category test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for map_channel_catalog_columns
  # Configure channel catalog column mappings
  # 
  # @param channel_catalog_id The channel catalog identifier
  # @param request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'map_channel_catalog_columns test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for override_channel_catalog_product_overrides
  # Override channel catalog product values
  # 
  # @param channel_catalog_id The channel catalog identifier
  # @param product_id The product identifier
  # @param request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'override_channel_catalog_product_overrides test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for reenable_channel_catalog_product
  # Reenable channel catalog product
  # By default a all your catalog products are exposed to the channel. You can reenable a product by using this operation. /!\\ In case of massive optimisation we recommand you to use the analytics api 
  # @param channel_catalog_id The channel catalog identifier
  # @param product_id The product identifier
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'reenable_channel_catalog_product test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for unmap_channel_catalog_category
  # Unmap channel catalog category
  # 
  # @param channel_catalog_id The channel catalog identifier
  # @param request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'unmap_channel_catalog_category test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
