=begin
#Public - Security

#This API will allow you to create your account and to get your tokens. \\ If you lost your password, you have an operation to get it back. 

OpenAPI spec version: 2.0
Contact: support@beezup.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::AnalyticsOptimisationsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'AnalyticsOptimisationsApi' do
  before do
    # run before each test
    @instance = SwaggerClient::AnalyticsOptimisationsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AnalyticsOptimisationsApi' do
    it 'should create an instact of AnalyticsOptimisationsApi' do
      expect(@instance).to be_instance_of(SwaggerClient::AnalyticsOptimisationsApi)
    end
  end

  # unit tests for optimise
  # Optimise products
  # /!\\ WARNING /!\\ \\ Apply the operation on every product related to this request. \\ This operation is used at the bottom of the analytics page result. 
  # @param store_id Your store identifier
  # @param action_name 
  # @param request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'optimise test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for optimise_by_category
  # Optimise products&#39;s category
  # /!\\ WARNING /!\\ \\ This operation will reenable or disable products&#39;s category for every channel indicated in the body.  
  # @param store_id Your store identifier
  # @param catalog_category_id The category identifier concerned by this optimisation
  # @param action_name 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :request The channel identifier list concerned by this optimisation
  # @return [nil]
  describe 'optimise_by_category test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for optimise_by_channel
  # Optimise products&#39;s category
  # /!\\ WARNING /!\\ \\ Apply the operation on every product on this channel. 
  # @param store_id Your store identifier
  # @param channel_id The channel identifier concerned by this optimisation
  # @param action_name 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'optimise_by_channel test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for optimise_by_product
  # Optimise products
  # /!\\ WARNING /!\\ \\ This operation will reenable or disable this product for every channel indicated in the body.  
  # @param store_id Your store identifier
  # @param product_id The product identifier concerned by this optimisation
  # @param action_name 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :request The channel identifier list concerned by this optimisation
  # @return [nil]
  describe 'optimise_by_product test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
