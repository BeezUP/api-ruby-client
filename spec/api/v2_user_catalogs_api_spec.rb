=begin
#BeezUP API

#This is the RESTful API of BeezUP which allows you to manage everything related to BeezUP

OpenAPI spec version: 2.0
Contact: support@beezup.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::V2UserCatalogsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'V2UserCatalogsApi' do
  before do
    # run before each test
    @instance = SwaggerClient::V2UserCatalogsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of V2UserCatalogsApi' do
    it 'should create an instact of V2UserCatalogsApi' do
      expect(@instance).to be_instance_of(SwaggerClient::V2UserCatalogsApi)
    end
  end

  # unit tests for auto_configure_auto_import_interval
  # Configure Auto Import Interval
  # 
  # @param store_id Your store identifier
  # @param request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'auto_configure_auto_import_interval test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for auto_delete_auto_import
  # Delete Auto Import
  # 
  # @param store_id Your store identifier
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'auto_delete_auto_import test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for auto_get_auto_import_configuration
  # Get the auto import configuration
  # 
  # @param store_id Your store identifier
  # @param [Hash] opts the optional parameters
  # @return [AutoImportConfiguration]
  describe 'auto_get_auto_import_configuration test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for auto_pause_auto_import
  # Pause Auto Import
  # 
  # @param store_id Your store identifier
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'auto_pause_auto_import test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for auto_resume_auto_import
  # Resume Auto Import
  # 
  # @param store_id Your store identifier
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'auto_resume_auto_import test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for auto_schedule_auto_import
  # Configure Auto Import Schedules
  # 
  # @param store_id Your store identifier
  # @param request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'auto_schedule_auto_import test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for auto_start_auto_import
  # Start Auto Import Manually
  # 
  # @param store_id Your store identifier
  # @param [Hash] opts the optional parameters
  # @return [Array<BeezUPCommonLink2>]
  describe 'auto_start_auto_import test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for catalog_change_catalog_column_user_name
  # Change Catalog Column User Name
  # 
  # @param store_id Your store identifier
  # @param column_id The catalog column identifier
  # @param request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'catalog_change_catalog_column_user_name test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for catalog_change_custom_column_expression
  # Change custom column expression
  # 
  # @param store_id Your store identifier
  # @param column_id The custom column identifier
  # @param request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'catalog_change_custom_column_expression test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for catalog_change_custom_column_user_name
  # Change Custom Column User Name
  # 
  # @param store_id Your store identifier
  # @param column_id The custom column identifier
  # @param request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'catalog_change_custom_column_user_name test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for catalog_compute_expression
  # Compute the expression for this catalog.
  # 
  # @param store_id Your store identifier
  # @param request 
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'catalog_compute_expression test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for catalog_delete_custom_column
  # Delete custom column
  # 
  # @param store_id Your store identifier
  # @param column_id The custom column identifier
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'catalog_delete_custom_column test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for catalog_get_beez_up_columns
  # Get the BeezUP columns
  # Get the BeezUP columns, this columns are used for mapping during the manual catalog importation process.
  # @param [Hash] opts the optional parameters
  # @return [Array<BeezUPColumnConfiguration>]
  describe 'catalog_get_beez_up_columns test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for catalog_get_catalog_columns
  # Get catalog column list
  # 
  # @param store_id Your store identifier
  # @param [Hash] opts the optional parameters
  # @return [CatalogColumns]
  describe 'catalog_get_catalog_columns test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for catalog_get_categories
  # Get category list
  # 
  # @param store_id Your store identifier
  # @param accept_encoding Indicates that the client accepts that the response will be compressed to reduce traffic size.
  # @param [Hash] opts the optional parameters
  # @return [Categories]
  describe 'catalog_get_categories test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for catalog_get_custom_column_expression
  # Get the encrypted custom column expression
  # 
  # @param store_id Your store identifier
  # @param column_id The custom column identifier
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'catalog_get_custom_column_expression test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for catalog_get_custom_columns
  # Get custom column list
  # 
  # @param store_id Your store identifier
  # @param [Hash] opts the optional parameters
  # @return [CustomColumns]
  describe 'catalog_get_custom_columns test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for catalog_get_product
  # Get product
  # 
  # @param store_id Your store identifier
  # @param product_id The product identifier you want to get
  # @param [Hash] opts the optional parameters
  # @return [Product]
  describe 'catalog_get_product test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for catalog_get_products
  # Get product list
  # 
  # @param store_id Your store identifier
  # @param [Hash] opts the optional parameters
  # @option opts [GetProductsRequest] :request 
  # @return [Products]
  describe 'catalog_get_products test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for catalog_get_random_products
  # Get random product list
  # 
  # @param store_id Your store identifier
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :count The count of random product you want to get
  # @return [Products]
  describe 'catalog_get_random_products test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for catalog_save_custom_column
  # Create or replace a custom column
  # 
  # @param store_id Your store identifier
  # @param column_id The custom column identifier
  # @param request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'catalog_save_custom_column test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for importation_activate_auto_import
  # Activate the auto importation of the last successful manual catalog importation.
  # Once you have made your fist manual catalog importation with success, you can call this operation to import it automatically. No parameter required, we know which one it is.
  # @param store_id Your store identifier
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'importation_activate_auto_import test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for importation_cancel
  # Cancel importation
  # 
  # @param store_id Your store identifier
  # @param execution_id The execution identifier of you catalog importation
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'importation_cancel test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for importation_commit
  # Commit Importation
  # 
  # @param store_id Your store identifier
  # @param execution_id The execution identifier of you catalog importation
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'importation_commit test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for importation_commit_columns
  # Commit columns
  # 
  # @param store_id Your store identifier
  # @param execution_id The execution identifier of you catalog importation
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'importation_commit_columns test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for importation_configure_catalog_column
  # Configure catalog column
  # 
  # @param store_id Your store identifier
  # @param execution_id The execution identifier of you catalog importation
  # @param column_id The custom column identifier
  # @param request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'importation_configure_catalog_column test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for importation_configure_remaining_catalog_columns
  # Configure remaining catalog columns
  # This operation should be used after you have mapped the required BeezUP Columns
  # @param store_id Your store identifier
  # @param execution_id The execution identifier of you catalog importation
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'importation_configure_remaining_catalog_columns test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for importation_delete_custom_column
  # Delete Custom Column
  # 
  # @param store_id Your store identifier
  # @param execution_id The execution identifier of you catalog importation
  # @param column_id The custom column identifier
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'importation_delete_custom_column test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for importation_get_custom_column_expression
  # Get the encrypted custom column expression in this importation
  # 
  # @param store_id Your store identifier
  # @param execution_id The execution identifier of you catalog importation
  # @param column_id The custom column identifier
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'importation_get_custom_column_expression test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for importation_get_custom_columns
  # Get custom columns currently place in this importation
  # 
  # @param store_id Your store identifier
  # @param execution_id The execution identifier of you catalog importation
  # @param [Hash] opts the optional parameters
  # @return [CustomColumns]
  describe 'importation_get_custom_columns test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for importation_get_detected_catalog_columns
  # Get detected catalog columns during this importation.
  # 
  # @param store_id Your store identifier
  # @param execution_id The execution identifier of you catalog importation
  # @param [Hash] opts the optional parameters
  # @return [DetectedCatalogColumns]
  describe 'importation_get_detected_catalog_columns test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for importation_get_importation_monitoring
  # Get the importation status
  # 
  # @param store_id Your store identifier
  # @param execution_id The execution identifier of you catalog importation
  # @param [Hash] opts the optional parameters
  # @return [ImportationMonitoring]
  describe 'importation_get_importation_monitoring test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for importation_get_manual_update_last_input_config
  # Get the last input configuration
  # 
  # @param store_id Your store identifier
  # @param [Hash] opts the optional parameters
  # @return [LastManualImportInputConfiguration]
  describe 'importation_get_manual_update_last_input_config test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for importation_get_product_sample
  # Get the product sample related to this importation with all columns (catalog and custom)
  # 
  # @param store_id Your store identifier
  # @param execution_id The execution identifier of you catalog importation
  # @param product_sample_index Index of the product sample. Starting from 0 to 99.
  # @param [Hash] opts the optional parameters
  # @return [ProductSample]
  describe 'importation_get_product_sample test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for importation_get_product_sample_custom_column_value
  # Get product sample custom column value related to this importation.
  # /!\\ Use this operation only when you just changed the custom column expression and you want to get a precise the property value. Otherwise use the operation Importation_GetProductSample which will give you all property values
  # @param store_id Your store identifier
  # @param execution_id The execution identifier of you catalog importation
  # @param product_sample_index Index of the product sample. Starting from 0 to 99.
  # @param column_id The custom column identifier
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'importation_get_product_sample_custom_column_value test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for importation_get_reportings
  # Get the latest catalog importation reporting
  # 
  # @param store_id Your store identifier
  # @param [Hash] opts the optional parameters
  # @return [Array<ImportationReporting>]
  describe 'importation_get_reportings test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for importation_ignore_column
  # Ignore Column
  # 
  # @param store_id Your store identifier
  # @param execution_id The execution identifier of you catalog importation
  # @param column_id The custom column identifier
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'importation_ignore_column test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for importation_map_catalog_column
  # Map catalog column to a BeezUP column
  # 
  # @param store_id Your store identifier
  # @param execution_id The execution identifier of you catalog importation
  # @param column_id The catalog column identifier
  # @param request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'importation_map_catalog_column test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for importation_map_custom_column
  # Map custom column to a BeezUP column
  # 
  # @param store_id Your store identifier
  # @param execution_id The execution identifier of you catalog importation
  # @param column_id The custom column identifier
  # @param request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'importation_map_custom_column test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for importation_reattend_column
  # Reattend Column
  # 
  # @param store_id Your store identifier
  # @param execution_id The execution identifier of you catalog importation
  # @param column_id The custom column identifier
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'importation_reattend_column test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for importation_save_custom_column
  # Create or replace a custom column
  # 
  # @param store_id Your store identifier
  # @param execution_id The execution identifier of you catalog importation
  # @param column_id The custom column identifier
  # @param request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'importation_save_custom_column test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for importation_start_manual_update
  # Start Manual Import
  # 
  # @param store_id Your store identifier
  # @param request 
  # @param [Hash] opts the optional parameters
  # @return [Array<BeezUPCommonLink2>]
  describe 'importation_start_manual_update test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for importation_technical_progression
  # Get technical progression
  # 
  # @param store_id Your store identifier
  # @param execution_id The execution identifier of you catalog importation
  # @param [Hash] opts the optional parameters
  # @return [ImportationTechnicalProgression]
  describe 'importation_technical_progression test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for importation_unmap_catalog_column
  # Unmap catalog column
  # 
  # @param store_id Your store identifier
  # @param execution_id The execution identifier of you catalog importation
  # @param column_id The catalog column identifier
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'importation_unmap_catalog_column test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for importation_unmap_custom_column
  # Unmap custom column
  # 
  # @param store_id Your store identifier
  # @param execution_id The execution identifier of you catalog importation
  # @param column_id The custom column identifier
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'importation_unmap_custom_column test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
