=begin
#Marketplaces - Channel catalogs

#This API allows you to manage your channel catalogs\\' marketplace settings and fetch your account\\'s catalog publication history

OpenAPI spec version: 2.0
Contact: support@beezup.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

# Common files
require 'swagger_client/api_client'
require 'swagger_client/api_error'
require 'swagger_client/version'
require 'swagger_client/configuration'

# Models
require 'swagger_client/models/account_publications'
require 'swagger_client/models/account_publications_links'
require 'swagger_client/models/beez_up_common_channel_catalog_id'
require 'swagger_client/models/beez_up_common_channel_id'
require 'swagger_client/models/beez_up_common_doc_url'
require 'swagger_client/models/beez_up_common_error_response_message'
require 'swagger_client/models/beez_up_common_error_summary'
require 'swagger_client/models/beez_up_common_exception_detail'
require 'swagger_client/models/beez_up_common_href'
require 'swagger_client/models/beez_up_common_http_method'
require 'swagger_client/models/beez_up_common_info_summaries'
require 'swagger_client/models/beez_up_common_info_summary'
require 'swagger_client/models/beez_up_common_lov_link2'
require 'swagger_client/models/beez_up_common_lov_link3'
require 'swagger_client/models/beez_up_common_link3'
require 'swagger_client/models/beez_up_common_link_parameter3'
require 'swagger_client/models/beez_up_common_marketplace_account_id'
require 'swagger_client/models/beez_up_common_marketplace_business_code'
require 'swagger_client/models/beez_up_common_marketplace_technical_code'
require 'swagger_client/models/beez_up_common_operation_id'
require 'swagger_client/models/beez_up_common_store_id'
require 'swagger_client/models/beez_up_common_success_summary'
require 'swagger_client/models/beez_up_common_user_error_message'
require 'swagger_client/models/beez_up_common_user_error_message_arguments'
require 'swagger_client/models/beez_up_common_warning_summary'
require 'swagger_client/models/channel_catalog_marketplace_properties'
require 'swagger_client/models/channel_catalog_marketplace_properties_links'
require 'swagger_client/models/channel_catalog_marketplace_property'
require 'swagger_client/models/channel_catalog_marketplace_property_group'
require 'swagger_client/models/channel_catalog_marketplace_setting'
require 'swagger_client/models/channel_catalog_marketplace_setting_array'
require 'swagger_client/models/channel_catalog_marketplace_settings'
require 'swagger_client/models/channel_catalog_marketplace_settings_links'
require 'swagger_client/models/feed_type'
require 'swagger_client/models/links_get_channel_catalog_marketplace_properties_link'
require 'swagger_client/models/links_get_channel_catalog_marketplace_settings_link'
require 'swagger_client/models/links_get_marketplace_account_stores_link'
require 'swagger_client/models/links_get_publications_link'
require 'swagger_client/models/links_set_channel_catalog_marketplace_settings_link'
require 'swagger_client/models/marketplace_channel_catalog'
require 'swagger_client/models/marketplace_channel_catalog_links'
require 'swagger_client/models/marketplace_channel_catalog_list'
require 'swagger_client/models/marketplace_channel_catalog_list_links'
require 'swagger_client/models/marketplace_channel_catalog_lov_links'
require 'swagger_client/models/publication_feed_reporting'
require 'swagger_client/models/publication_reporting'
require 'swagger_client/models/publication_type'
require 'swagger_client/models/set_channel_catalog_marketplace_settings_request'
require 'swagger_client/models/type'

# APIs
require 'swagger_client/api/marketplaces_channel_catalogs_global_api'
require 'swagger_client/api/marketplaces_channel_catalogs_publications_api'
require 'swagger_client/api/marketplaces_channel_catalogs_settings_api'

module SwaggerClient
  class << self
    # Customize default settings for the SDK using block.
    #   SwaggerClient.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
